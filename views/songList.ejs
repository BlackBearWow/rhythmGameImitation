<!DOCTYPE html>
<html lang="en" data-bs-theme="light">

<head>
    <title>rhythm game songList</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        let songs;
        let bitmap;
        function getAllSongs() {
            $.ajax({
                url: `getAllSongs`,
                type: `get`,
                success: function (data) {
                    // indexedDB에 저장함.
                    console.log(data);
                    saveToDB(data);
                },
                error: function (error) {
                    console.error(error);
                }
            })
        }
        function saveToDB(data) {
            const request = indexedDB.open("rhythm");
            let db;
            request.onerror = (event) => {
                console.error(`Database error: ${event.target.errorCode}`);
            }
            request.onupgradeneeded = (event) => {
                db = event.target.result;
                const songObjectStore = db.createObjectStore("songs", { keyPath: "id" });
                songObjectStore.createIndex("songName", "songName", { unique: true });
                const bitmapObjectStore = db.createObjectStore("bitmap", { keyPath: "id" });
                bitmapObjectStore.createIndex("bitmapName", "bitmapName", { unique: true });
            }
            request.onsuccess = (event) => {
                db = event.target.result;
                const transaction = db.transaction(["songs", "bitmap"], "readwrite");
                const songObjectStore = transaction.objectStore("songs");
                songObjectStore.clear();
                data.songs.forEach((song)=>{
                    const request = songObjectStore.add(song);
                    request.onerror = (event) => {
                        console.log(`song 데이터 넣기 에러`);
                    }
                })
                const bitmapObjectStore = transaction.objectStore("bitmap");
                bitmapObjectStore.clear();
                data.bitmap.forEach((val)=>{
                    const request = bitmapObjectStore.add(val);
                    request.onerror = (event) => {
                        console.log(`bitmap 데이터 넣기 에러`);
                    }
                })
                showLists();
            };
        }
        function showLists() {
            const request = indexedDB.open("rhythm");
            let db;
            request.onerror = (event) => {
                console.error(`Database error: ${event.target.errorCode}`);
            }
            request.onupgradeneeded = (event) => {
                db = event.target.result;
                const songObjectStore = db.createObjectStore("songs", { keyPath: "id" });
                songObjectStore.createIndex("songName", "songName", { unique: true });
                const bitmapObjectStore = db.createObjectStore("bitmap", { keyPath: "id" });
                bitmapObjectStore.createIndex("bitmapName", "bitmapName", { unique: true });
            }
            request.onsuccess = (event) => {
                db = event.target.result;
                const transaction = db.transaction(["songs", "bitmap"], "readwrite");
                const songObjectStore = transaction.objectStore("songs");
                const bitmapObjectStore = transaction.objectStore("bitmap");
                songs = songObjectStore.getAll();
                songs.onsuccess = (event) => {
                    if(event.target.result.length == 0){
                        alert("데이터가 없습니다. 곡 갱신하기 버튼을 눌러주세요");
                        return;
                    }
                    $("#accordion").empty();
                    event.target.result.forEach((val, idx)=>{
                        $("#accordion").append(`<div class="card">
                            <div class="card-header p-0">
                                <a class="btn p-0" data-bs-toggle="collapse" href="#collapse${val.id}">
                                <img style="height:70px" src="/songs/${val.songName}/${val.bg}">
                                ${val.songName}
                                [${val.duration}초]
                                </a>
                            </div>
                            <div id="collapse${val.id}" class="collapse" data-bs-parent="#accordion">
                                <div class="card-body">
                                    <table class="table table-bordered table-striped-columns">
                                        <thead>
                                            <th scope="col">레벨</th><th scope="col">제목</th>
                                        </thead>
                                        <tbody id="songData${val.id}">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>`);
                    })
                }
                bitmap = bitmapObjectStore.getAll();
                bitmap.onsuccess = (event) => {
                    event.target.result.forEach((val, idx)=>{
                        $(`#songData${val.songId}`).append(`<tr onclick="location.href=\`/playRhythmGame/${val.songId}/${val.id}\`;">
                            <th scope="row">${val.level}</th>
                            <td>${val.bitmapName}</td>
                        </tr>`);
                    })
                }
            };
        }
        showLists();
    </script>
</head>

<body>
    <div class="container mt-2">
        <button onclick="getAllSongs()">전체 곡 갱신하기</button>
        <h2>곡 리스트</h2>
        <div id="accordion">
        </div>
    </div>
</body>

</html>