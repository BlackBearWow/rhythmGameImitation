<!DOCTYPE html>
<html lang="en" data-bs-theme="light">

<head>
    <title>rhythm game songList</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        li {
            transition: all 1s;
        }

        li.bb {
            background-color: #00ffff;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        let songs;
        let bitmap;
        function getAllSongs() {
            $.ajax({
                url: `getAllSongs`,
                type: `get`,
                success: function (data) {
                    // indexedDB에 저장함.
                    console.log(data);
                    saveToDB(data);
                },
                error: function (error) {
                    console.error(error);
                }
            })
        }
        function saveToDB(data) {
            const request = indexedDB.open("rhythm");
            let db;
            request.onerror = (event) => {
                console.error(`Database error: ${event.target.errorCode}`);
            }
            request.onupgradeneeded = (event) => {
                db = event.target.result;
                const songObjectStore = db.createObjectStore("songs", { keyPath: "id" });
                songObjectStore.createIndex("songName", "songName", { unique: true });
                const bitmapObjectStore = db.createObjectStore("bitmap", { keyPath: "id" });
                bitmapObjectStore.createIndex("bitmapName", "bitmapName", { unique: true });
                const noteInfoObjectStore = db.createObjectStore("noteInfo", { keyPath: "path" });
            }
            request.onsuccess = (event) => {
                db = event.target.result;
                const transaction = db.transaction(["songs", "bitmap"], "readwrite");
                const songObjectStore = transaction.objectStore("songs");
                songObjectStore.clear();
                data.songs.forEach((song) => {
                    const request = songObjectStore.add(song);
                    request.onerror = (event) => {
                        console.log(`song 데이터 넣기 에러`);
                    }
                })
                const bitmapObjectStore = transaction.objectStore("bitmap");
                bitmapObjectStore.clear();
                data.bitmap.forEach((val) => {
                    const request = bitmapObjectStore.add(val);
                    request.onerror = (event) => {
                        console.log(`bitmap 데이터 넣기 에러`);
                    }
                })
                alert("전체 곡 가져오기 / 최신화를 하였습니다");
                showLists();
            };
        }
        function showLists() {
            const request = indexedDB.open("rhythm");
            let db;
            request.onerror = (event) => {
                console.error(`Database error: ${event.target.errorCode}`);
            }
            request.onupgradeneeded = (event) => {
                db = event.target.result;
                const songObjectStore = db.createObjectStore("songs", { keyPath: "id" });
                songObjectStore.createIndex("songName", "songName", { unique: true });
                const bitmapObjectStore = db.createObjectStore("bitmap", { keyPath: "id" });
                bitmapObjectStore.createIndex("bitmapName", "bitmapName", { unique: true });
                const noteInfoObjectStore = db.createObjectStore("noteInfo", { keyPath: "path" });
            }
            request.onsuccess = (event) => {
                db = event.target.result;
                const transaction = db.transaction(["songs", "bitmap"], "readonly");
                const songObjectStore = transaction.objectStore("songs");
                const bitmapObjectStore = transaction.objectStore("bitmap");
                songs = songObjectStore.getAll();
                songs.onsuccess = (event) => {
                    if (event.target.result.length == 0) {
                        alert("songs 데이터가 없습니다. 곡 갱신하기 버튼을 눌러주세요");
                        return;
                    }
                    $("#accordion").empty();
                    event.target.result.forEach((val, idx) => {
                        $("#accordion").append(`<div class="card">
                            <div class="card-header p-0">
                                <a class="btn p-0" data-bs-toggle="collapse" href="#collapse${val.id}">
                                <img style="height:70px" src="/songs/${val.songName}/${val.bg}">
                                ${val.songName}
                                [${val.duration}초]
                                </a>
                            </div>
                            <div id="collapse${val.id}" class="collapse" data-bs-parent="#accordion">
                                <div class="card-body">
                                    <table class="table table-bordered table-striped-columns">
                                        <thead>
                                            <th scope="col">레벨</th><th scope="col">제목</th>
                                        </thead>
                                        <tbody id="songData${val.id}">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>`);
                    })
                }
                bitmap = bitmapObjectStore.getAll();
                bitmap.onsuccess = (event) => {
                    event.target.result.forEach((val, idx) => {
                        $(`#songData${val.songId}`).append(`<tr onclick="location.href=\`/playRhythmGame/${val.songId}/${val.id}\`;">
                            <th scope="row">${val.level}</th>
                            <td>${val.bitmapName}</td>
                        </tr>`);
                    })
                }
            };
        }
        function changeNoteSpeed(val) {
            $("#noteSpeedNum").html(val);
            localStorage.setItem("noteSpeed", val);
        }
        function changeCanvasOpacity(val) {
            $("#canvasOpacityNum").html(val);
            localStorage.setItem("canvasOpacity", val);
        }
        //document가 로드되면.
        $(function () {
            //indexedDB에서 곡들을 보여줌
            showLists();

            //설정창에 필요한것들
            let noteSpeed = localStorage.getItem("noteSpeed");
            let canvasOpacity = localStorage.getItem("canvasOpacity");
            // localStorage에 값이 없다면 새로 저장한다. 
            if (noteSpeed == null) {
                localStorage.setItem("noteSpeed", "1");
            }
            // 값이 있다면 해당 값을 화면에 출력
            else {
                $("#noteSpeedNum").html(noteSpeed);
                $("#noteSpeed").val(noteSpeed);
            }

            if (canvasOpacity == null) {
                localStorage.setItem("canvasOpacity", "1");
            }
            else {
                $("#canvasOpacityNum").html(canvasOpacity);
                $("#canvasOpacity").val(canvasOpacity);
            }
        })
    </script>
</head>

<body>
    <div class="container-fluid">

        <div class="row text-bg-secondary p-1">
            <div class="col-4">
                Navbar
            </div>
            <div class="col-4">
                <input id="songSearch" class="form-control" type="text" placeholder="곡이름 검색하기">
            </div>
            <div class="col-4 d-flex justify-content-end">
                <button type="button" class="btn btn-primary me-2">로그인</button>
                <button type="button" class="btn btn-primary me-2" data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">설정</button>
                <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample"
                    aria-labelledby="offcanvasExampleLabel">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasExampleLabel">설정</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <!--위에서 내려오는 속도-->
                        <label for="noteSpeed" class="form-label">노트가 위에서 내려오는 속도: </label>
                        <a id="noteSpeedNum">1</a>
                        <input type="range" class="form-range" min="0.3" max="3" step="0.1" id="noteSpeed"
                            oninput="changeNoteSpeed(this.value)">
                        <!--canvas 투명도-->
                        <label for="canvasOpacity" class="form-label">canvas 투명도(1에 가까울수록 선명함): </label>
                        <a id="canvasOpacityNum">1</a>
                        <input type="range" class="form-range" min="0.2" max="1" step="0.05" id="canvasOpacity"
                            oninput="changeCanvasOpacity(this.value)">
                        <button type="button" class="btn btn-primary" onclick="">라이트모드 / 다크모드</button>
                    </div>
                </div>
                <button type="button" class="btn btn-primary" onclick="getAllSongs()">전체 곡 가져오기 / 최신화</button>
            </div>
        </div>

        <div class="row">
            <div class="col-6">
                <h1>곡 리스트</h1>
                <div id="songs">
                    <ul class="list-group">
                        <li class="list-group-item">Active item</li>
                        <li class="list-group-item">Item</li>
                        <li class="list-group-item">Disabled item</li>
                    </ul>

                </div>
                <div id="accordion">
                </div>
            </div>
            <div class="col-6">
                <h1>비트맵 리스트</h1>
                <img class="card-img-bottom"
                    src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Men_triple_jump_French_Athletics_Championships_2013_t160700.jpg/400px-Men_triple_jump_French_Athletics_Championships_2013_t160700.jpg?20131027193745"
                    alt="Title">
            </div>
        </div>
    </div>
</body>

</html>